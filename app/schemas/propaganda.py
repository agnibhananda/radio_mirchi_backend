from pydantic import BaseModel, Field
from typing import List, Optional
from uuid import UUID, uuid4

class Speaker(BaseModel):
    """Defines a speaker in the radio show."""
    name: str
    gender: str
    system_prompt: Optional[str] = None # To be generated in Stage 2

class PropagandaGenerationResult(BaseModel):
    """Schema for the data directly generated by the LLM in Stage 1."""
    summary: str
    proof_sentences: List[str] = Field(..., description="A few sentences that serve as 'proof' or talking points.")
    speakers: List[Speaker] = Field(..., min_length=1, max_length=4)
    initial_listeners: int

class PropagandaMission(BaseModel):
    """Schema for the full mission object stored in MongoDB."""
    id: UUID = Field(default_factory=uuid4)
    user_id: str
    topic: str
    status: str = "stage1"
    generation_result: PropagandaGenerationResult

class PropagandaCreateRequest(BaseModel):
    """Request model for creating a new propaganda mission."""
    topic: str
    user_id: str